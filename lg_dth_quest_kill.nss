/*
	1) Put it in the "On Death Script" slot of the intended creature.
	2) Set the following local variables on said creature:
     QUEST_ID (String) - The ID of the quest to progress
     QUEST_STEP (Int) - The step of the quest to progress to.
     QUEST_XP (Int) - Optional. The one-time XP bonus related to the quest.
     QUEST_QP (Int) - Optional. The one-time QP bonus related to the quest.
	 QUEST_WP (String) - Optional. The tag of destination waypoint (if any) after you have killed the creature.
*/

#include "profession_include"

void SlayerKill(object oPARTY, string sMOB, string sNAME)
{
	object oESSENCE = GetItemPossessedBy(oPARTY, "player_essence");
	if (GetLocalString(oESSENCE, "SLAYER_TAG") != sMOB) return;
	string sTXT;
	int nTOTAL = GetLocalInt(oESSENCE, "SLAYER_TOTAL");
	int nKILLS = GetLocalInt(oESSENCE, "SLAYER_KILLS") + 1;
	if (nKILLS < nTOTAL)
	{
		sTXT = sNAME + "(s) killed: " + IntToString(nKILLS) + "/" + IntToString(nTOTAL);
		SetLocalInt(oESSENCE, "SLAYER_KILLS", nKILLS);
	}
	else
	{
		int nXP = GetLocalInt(oESSENCE, "SLAYER_EXP");
		GiveCraftXP(oPARTY, SKILL_SLAYER, nXP);
		sTXT = "You have killed all the " + sNAME + "(s) required by the Slayer Master!";
		DeleteLocalInt(oESSENCE, "SLAYER_KILLS");
		DeleteLocalInt(oESSENCE, "SLAYER_TOTAL");
		DeleteLocalInt(oESSENCE, "SLAYER_EXP");
		DeleteLocalString(oESSENCE, "SLAYER_TAG");	
	}
	FloatingTextStringOnCreature(sTXT, oPARTY, FALSE);
}

void SlayerCheck(object oPC, object oMOB)
{
	string sMOB = GetTag(oMOB);
	string sNAME = GetName(oMOB);
	object oPARTY = GetFirstFactionMember(oPC, FALSE);
	while (oPARTY != OBJECT_INVALID)
	{
		if (GetIsOwnedByPlayer(oPARTY) == TRUE) SlayerKill(oPARTY, sMOB, sNAME);
		oPARTY = GetNextFactionMember(oPC, FALSE);
	}
}

void UpdateQuest(object oPC, object oMOB)
{
	string sWP = GetLocalString(oMOB, "QUEST_WP");
	if (sWP != "")
	{
		object oWP = GetObjectByTag(sWP);
		if (oWP == OBJECT_INVALID) SendMessageToPC(oPC, "ERROR: Waypoint not found."); 
		else DelayCommand(0.0f, JumpPartyToArea(oPC, oWP));
	}
	string sQUEST = GetLocalString(oMOB, "QUEST_ID");
	if (sQUEST == "") return;
	int nSTEP = GetLocalInt(oMOB, "QUEST_STEP");
	int nXP = GetLocalInt(oMOB, "QUEST_XP");
	int nQP = GetLocalInt(oMOB, "QUEST_QP");
	AddScriptParameterString(sQUEST);
	AddScriptParameterInt(nSTEP);
	AddScriptParameterInt(nXP);
	AddScriptParameterInt(nQP);
	AddScriptParameterInt(FALSE); //Not from Conversation
	AddScriptParameterInt(TRUE); //Check all party members by default
	ExecuteScriptEnhanced("quest_action", oPC);	
}

void main()
{
	// Auto-Generated by Legends Spawn Plugin 2.0
	ExecuteScript("leg_all_masterdeath", OBJECT_SELF);
	
	object oMODULE = GetModule();
	object oMOB = OBJECT_SELF;
	object oPC = GetLastKiller();
	SlayerCheck(oPC, oMOB);
	UpdateQuest(oPC, oMOB);
	
	// If the LOOT Plugin is active.
	if (GetLocalInt(oMODULE, "LEG_LOOT_ACTIVE") != TRUE) return;	
	if (GetLocalInt(oMODULE, "LEG_LOOT_ONDEATH") != TRUE) return;
	
	object oParent = GetLocalObject(oMOB, "SPAWN_Parent");
	if (oParent == OBJECT_INVALID) oParent = oMOB;
	else if (GetLocalString(oParent, "LEG_LOOT_ID") == "") oParent = oMOB;
		
	// If the Spawn plugin says to not Drop Loot on Death, then we don't make loot at all here.
	// Of course if we are not using the spawn plugin at all, then go ahead and make loot.
	if (!GetLocalInt(oMODULE, "LEG_SPAWN_ACTIVE") || !GetLocalInt(GetLocalObject(oMOB, "SPAWN_Parent"),"LEG_SPAWN_DoNotDropMyLoot"))
	{
		AddScriptParameterObject(oPC);
		AddScriptParameterObject(oParent);
		ExecuteScriptEnhanced("leg_loot_makeloot", oMOB);
	}
}
